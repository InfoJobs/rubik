//generics
@import "../core/print";

/*------------------------------------*\
    $UTILITIES
\*------------------------------------*/

/*
Helper classes #disabled#

Styleguide #{$sgi-helpers}
*/

.pull-left {
	float: left;

	&--mobile {
		float: left;

		@include mediaquery ($bp-tablet) {
			float: none;
		}
	}

	&--tablet {

		@include mediaquery ($bp-tablet) {

			float:left;

		}
	}
}

.pull-right {
	float: right;

	&--mobile {
		float: right;

		@include mediaquery ($bp-tablet) {
			float: none;
		}
	}

	&--tablet {
		@include mediaquery ($bp-tablet) {
			float:right;
		}
	}

}

.pull-left--desktop {
	@include mediaquery ($bp-desktop) {
		float: left;
	}
}

.pull-right--desktop {
	@include mediaquery ($bp-desktop) {
		float: right;
	}
}

.text-center {
	text-align: center;

  svg {
    margin: 0 auto;
  }

	.centered {
		display: inline-block;
	}
}

.text-center-small-device {
	text-align: center;

	@include mediaquery ($bp-tablet) {
		text-align: left;
	}
}

.text-center-medium-device {
	text-align: center;

	@include mediaquery ($bp-desktop) {
		text-align: left;
	}
}


.text-right {
	text-align: right;
}

[class^="lines-"],
[class*="lines-"] {
	display: block;
}

.text-hyphen {
	-webkit-hyphens: auto;
	-moz-hyphens: auto;
	-ms-hyphens: auto;
	hyphens: auto;
}

//Use to add clickable area
.hit-area {
	position: relative;

	&::after {
		position: absolute;
		top: -5px;
		right: -5px;
		bottom: -5px;
		left: -5px;
		content: "";
	}
}

.pull-end {
	align-items: flex-end;
}

/*------------------------------------*\
    $FONT
\*------------------------------------*/

.text-uppercase {
  text-transform: uppercase;
}

/*------------------------------------*\
    $BORDERS
\*------------------------------------*/

@each $value in $orientations {

  .border-#{$value}  { // Used to generate a border line on top, right, bottom or left position
    border-#{$value}: 1px solid $darkest-shiro;
    margin: 0;//only border, reset margins

    @at-root .inner #{&} {
      margin-right: -20px;
      margin-left: -20px;
    }
  }

}

.border-all {
  @include border-default;
}

.border-divider { // Used to generate a gap with a top border
	padding-top: 20px;
	padding-bottom: 20px;
	border-top: 1px solid $darkest-shiro;

	.inner & {
	   	margin-left: -10px;
	   	margin-right: -10px;
		padding-right: 10px;
	   	padding-left: 10px;

	   @include mediaquery ($bp-tablet) {
	       	margin-left: -20px;
	   		margin-right: -20px;
			padding-right: 20px;
			padding-left: 20px;
	   }
	}

	&:last-child {
		padding-bottom: 0;
	}
}

.border-top-expanded {
	@include border-top-expanded;
}

.shadow {
	box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.15);
  border-radius: 2px;
}

.border-rounded {
  border-radius: $border-radius;
}

/*------------------------------------*\
    $MARGINS and PADDINGS

    var $orientations in _vars.scss
\*------------------------------------*/

@each $value in $orientations {

	.margin-#{$value}  {
	   margin-#{$value}: 10px;

	   @include mediaquery ($bp-tablet) {
	   		margin-#{$value}: $padding;
	   	}
	}
	.padding-#{$value}  {
	   padding-#{$value}: $padding;
	}

}

.link-annex {
	margin-right: 20px;
}

/*------------------------------------*\
    $HIDE
\*------------------------------------*/

.hide {
	display: none;
}

@media only screen and (max-width: $mobile-start) {

	.hide-small-device,
	div.hide-small-device,
	.aside-wrapper .hide-small-device {
		display: none!important;
	}
	//div.hide-small-device is must because we have .btn-group > div {display: table-cell;} on buttons.scss
	//.aside-wrapper .hide-small-device is must because we have .aside-wrapper .col-n {display: table-cell;} on grids.scss

}

@include mediaquery ($bp-tablet) {

	//Use to replace text in desktop, this class needs data-text attribute and has to be included the first one
	.data-text {

		&::before {
			content: attr(data-text);
			position: static;
		}

		acronym,
		span {
		display: none;
		}
	}

}

@media only screen and (min-width: 481px) and (max-width: 768px) { //TODO: convert to a mixin

	.hide-medium-device,
	div.hide-medium-device,
	.aside-wrapper .hide-medium-device {
		display: none;
	}
	//div.hide-medium-device is must because we have .btn-group > div {display: table-cell;} on buttons.scss
	//.aside-wrapper .hide-medium-device is must because we have .aside-wrapper .col-n {display: table-cell;} on grids.scss
}

@include mediaquery ($bp-desktop) {

	.hide-large-device {
		display: none;
	}

}

.invisible {
   visibility: hidden;
}


/*------------------------------------*\
    $IMG
\*------------------------------------*/

.img-responsive {
	max-width: 100%;
	height: auto;
}


/*------------------------------------*\
    $TYPOGRAPHY
\*------------------------------------*/

.break {
	display: block;

	&-small {
		display: block;

		@include mediaquery ($bp-desktop) {
			display: inline;
		}
	}
}

.user-select {
  -webkit-user-select: all;
  -moz-user-select: all;
  -ms-user-select: all;
  user-select: all;
}

/*------------------------------------*\
    $POSITION
\*------------------------------------*/

.sticky {
  position: fixed;
  top: 0;
  width: 100%;
  z-index: $zindex-sticky-content;

  @media print {
    position: static;
  }
}

@mixin sticky-bottom {
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
  box-shadow: 0 -1px 1px rgba(0, 0, 0, 0.15);
  z-index: $zindex-sticky-content;

  @media print {
    position: static;
  }

}

.sticky-bottom {
  @include sticky-bottom;

  &-medium-device {
    @include sticky-bottom;

    @include mediaquery ($bp-desktop) {
      position: static;
      box-shadow: none;
      .inner &{
        padding: 0;
      }
    }
  }


}
