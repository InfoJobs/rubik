@import "mixins-icons";
@import "mixins-colors";
@import "mixins-stickers";
@import "mixins-tags";
@import "mixins-columns";
@import "mixins-forms";
@import "mixins-borders";
@import "mixins-crop-image";
@import "mixins-size";
@import "mixins-transitions";


/*------------------------------------*\
$MIXINS
\*------------------------------------*/

/*
Mediaqueries

$breakpoint = $bp-tablet, $bp-desktop or specific
$query1     = min or max
$query2     = width, device-width

*/

@mixin mediaquery ($breakpoint, $query1: min, $query2: width) {

	@media only screen and (#{$query1}-#{$query2}: $breakpoint) {
		@content;
	}
}

@mixin transition-button {
	transition: background-color 0.3s ease,
              color 0.3s ease;
}

@mixin box-sizing($box-model) {
	-webkit-box-sizing: $box-model;
	-moz-box-sizing: $box-model;
	box-sizing: $box-model;
}

/*Flexbox*/

@mixin display-flex {
	display: -webkit-box;
  	display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

@mixin align-items($value: stretch) {
	@if $value == flex-start {
		-webkit-box-align: start;
		-ms-flex-align: start;
	} @else if $value == flex-end {
		-webkit-box-align: end;
		-ms-flex-align: end;
	} @else {
		-webkit-box-align: $value;
		-ms-flex-align: $value;
	}
	-webkit-align-items: $value;
	-moz-align-items: $value;
	align-items: $value;
}

@mixin flex ( $value: 1) {
	-webkit-box-flex: $value;
	-webkit-flex: $value;
	-ms-flex: $value;
	flex: $value;
}

@mixin flex-flow ( $value: row nowrap ) {
	-webkit-flex-flow: $value;
       flex-flow: $value;
}

@mixin flex-wrap ( $value: wrap ) {
	-webkit-flex-wrap: $value;
       flex-wrap: $value;
}

@mixin flex-direction ( $value: row) {
	-webkit-flex-direction: $value;
       flex-direction: $value;
}

@mixin order($val) {
  -webkit-box-ordinal-group: $val;
  -moz-box-ordinal-group: $val;
  -ms-flex-order: $val;
  -webkit-order: $val;
  order: $val;
  	//android 4.3
	-webkit-box-ordinal-group: $val;
	   -moz-box-ordinal-group: $val;
	        box-ordinal-group: $val;
	//
}

@mixin flex-direction($val) {
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	-webkit-flex-direction: $val;
	-ms-flex-direction: $val;
	flex-direction: $val;
}


@mixin inner {
	padding: $padding 10px;

	@include mediaquery ($bp-tablet) {
		padding: $padding;
	}
}

@mixin inner-expanded {
	padding-top: 20px;
    padding-bottom: 20px;

    @include mediaquery ($bp-tablet) {
	    padding-top: 40px;
	    padding-bottom: 40px;
    }
}

@mixin panel-default {
	background-color: $dark-shiro;
}

//mixin for all prefix browsers
@mixin vendor-prefix($prop, $value) {
	@each $vendor in ('-webkit-', '-moz-', '-ms-', '-o-', '') {
		#{$vendor}#{$prop}: #{$value};
	}
}

//  use example:
//  .class {
//      @include vendor-prefix('box-sizing', 'border-box');
//  }
//

@mixin linear-gradient($fromColor, $top-value, $toColor) {
	background:   -webkit-linear-gradient(top, $fromColor $top-value, $toColor 100%);
	background: 	 -moz-linear-gradient(top, $fromColor $top-value, $toColor 100%);
	background:       -ms-linear-gradient(top, $fromColor $top-value, $toColor 100%);
	background:        -o-linear-gradient(top, $fromColor $top-value, $toColor 100%);
	background:          -webkit-gradient(left top, left bottom, color-stop($top-value, $fromColor), color-stop(100%, $fromColor));
	background: 		  linear-gradient(top, $fromColor $top-value, $toColor 100%);
}

//	use example:
//	.class {
//		@include linear-gradient(rgba(0,0,0,0), 50%, rgba(0,0,0,0.8));
//	}
//

@mixin border-top-expanded {
	&::before {
		content: "";
		border-top: 1px solid $darkest-shiro;
		display: block;

		.panel-contrast & {
			border-top: 1px solid $mid-script;
		}
	}
}

@mixin clearfix {
   &::after {
     content: " "; 	// 1
     display: table;
     clear: both;
   }
 }

/*
Font
*/

@mixin font-rendering {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin bold {
  font-family: $base-font-family-bold;
  @include font-rendering;
}

@mixin semi-bold {
  font-family: $base-font-family-semi-bold;
  @include font-rendering;
}

@mixin light{
	font-family: $base-font-family-light;
}

@mixin normal {
  font-family: $base-font-family;
}

@mixin hit-area {
  position: relative;

  &::after {
    position: absolute;
    top: -5px;
    right: -5px;
    bottom: -5px;
    left: -5px;
    content: "";
  }
}
