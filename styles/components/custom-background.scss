/*
Custom Background

To create custom backgrounds use a style attribute in html for the background-image.

Use class `.custom-bg` to make the image responsive.<br>
Use class`.overlay-60` to apply an overlay.

Markup:
<div class="custom-bg overlay-60" style="background-image: url('./images/backgrounds/bg-header-grid-01.jpg');">
    <div class="inner">
        <h1>Custom background</h1>
        <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et </p>
        <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et </p>
    </div>
</div>

Styleguide #{$sgi-custom-background}
*/

@mixin custom-bg {

  @include font-rendering;
  background-repeat: no-repeat;
  background-color: $dark-softened;
  //the background-image is not reusable, inline in html
}

.custom-bg {
  @include custom-bg;
  background-position: top;

  &-center {
    @include custom-bg;
    background-position: center;
  }

  &-cover{
    @include custom-bg;
    background-repeat: no-repeat;
    background-size: cover;
  }

  &-default {
    min-height: 110px;
    background-size: cover;

    @include mediaquery ($bp-tablet) {
      min-height: 130px;
    }

    @include mediaquery ($bp-desktop) {
      min-height: 150px;
        }
  }

  &-plus {
    background-position: center;
	min-height: 140px;
	border-bottom: 1px solid $darkest-shiro;
	background-size: cover;

    @include mediaquery ($bp-tablet) {
      min-height: 190px;
    }

    @include mediaquery ($bp-desktop) {
      min-height: 300px;
    }
  }
}

//Overlay in background

$overlay-opacity: (40, 60,85);

@each $value in $overlay-opacity {

	.overlay-#{$value} {

    position: relative;

		&::before {
            content: "";
            position: absolute;
            top: 0;
            bottom: 0;
            left: 0;
            right: 0;
            width: 100%;
            height: 100%;
            background-color: #000;
            opacity: $value/100;
            border-radius: inherit;
		}

    .inner {
        position: relative;
    }
	}
}
