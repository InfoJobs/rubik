/*------------------------------------*\
	$NOTIFICATIONS
\*------------------------------------*/

/*
Notifications

Contextual notifications for messages.

The modifier classes are `.notification-error` for errors, `.notification-success` for success,  `.notification-system for information and `.notification-warning` for warnings.<br>
Use class `.notification-dismissable` for notifications with close button.<br>
Wrap in div with class `.notification-toast-fixed` to fix at top of the page, <a href="#{$sgp-notificationToast}" target="blank">#{$sgp-openPage}</a>

Markup:
<!-- Notification succes-->
  <div class="notification-success" role="alert">
    <div class="notification-body">
      <span class="notification-icon iconfont-Big-check"></span>
      <p>Lorem ipsum dolor sit amet,Lorem ipsum dolor sit amet,Lorem ipsum dolor sit amet, Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget. <a href="#" class="link-underline">Link underline</a></p>
      <button class="notification-close js-notification-close" type="button" aria-label="Close"><span aria-hidden="true" hidden>Close</span></button>
    </div>
  </div>
<!-- /Notification success-->
<div class="container-expanded">
<!-- Notification error -->
<div class="notification-error" role="alert">
  <div class="notification-body">
    <span class="notification-icon iconfont-Alert"></span>
    <p>Lorem ipsum dolor sit amet,Lorem ipsum dolor sit amet,Lorem ipsum dolor sit amet, Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget.</p>
    <button class="notification-close js-notification-close" type="button" aria-label="Close"><span aria-hidden="true" hidden>Close</span></button>
  </div>
</div>
<!-- /Notification error -->
</div>
<div class="container-expanded">
<!-- Notification system -->
<div class="notification-system" role="alert">
  <div class="notification-body">
    <p>Lorem ipsum dolor sit amet,Lorem ipsum dolor sit amet,Lorem ipsum dolor sit amet, Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget. <a href="#" class="link-underline">Link underline</a></p>
    <button class="notification-close js-notification-close" type="button" aria-label="Close"><span aria-hidden="true" hidden>Close</span></button>
  </div>
</div>
<!-- /Notification info -->
</div>
<div class="container-expanded">
<!-- Notification warning -->
<div class="notification-warning" role="alert">
  <div class="notification-body">
    <span class="notification-icon iconfont-Info"></span>
    <p>Lorem ipsum dolor sit amet,Lorem ipsum dolor sit amet,Lorem ipsum dolor sit amet, Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget. <a href="#" class="link-underline">Link underline</a></p>
    <button class="notification-close js-notification-close" type="button" aria-label="Close"><span aria-hidden="true" hidden>Close</span></button>
  </div>
  <div class="notification-footer">
    <button class="btn-small btn-default-alternative" type="button">Secondary alternative</button>
  </div>
</div>
<!-- /Notification warning -->
</div>

Styleguide #{$sgi-notifications}
*/

$notifications: success $bamboo , system $outer-king, error $trueblood, warning $kiiro;

@mixin notification-fixed {
  position: fixed;
  max-width: $container-width;

  .inner & {
    margin-left: -$gap;
    @include mediaquery ($bp-tablet) {
      margin-left: -$gap * 2;
    }
  }
}

@mixin notification {
  @include font-rendering;
  font-size: $base-font-size;
  line-height: $base-line-height;
  width: 100%;
  z-index: $zindex-sticky-content;
  overflow: hidden;
}

.notification {

  &-body {
    @include display-flex;
    @include align-items(flex-start);
    padding: $gap * 2 $gap * 2 0 $gap * 2;

    &:only-child {
      padding-bottom: $gap * 2;
    }

    p {
      @include flex(1 1 100%);
      margin: 0;
    }

    a {
      white-space: nowrap;
    }
  }

  &-close {
    @include btn-close;
    @include flex(1 0 auto);
    color: inherit;
    margin-left: $gap;

    &::before {
      color: inherit;
    }
  }

  &-icon {
    display: none;

    @include mediaquery($bp-tablet) {
      @include flex(1 0 auto);
      display: block;
      margin-right: $gap / 2;
      color: inherit;
      &::before {
        color: inherit;
      }
    }
  }

  &-footer {
    padding: $gap $gap * 2 $gap * 2 $gap * 2;
    text-align: right;

  }

  @each $notification-type in $notifications {
    $key: nth($notification-type, 1);
    $value: nth($notification-type, 2);

    &-#{$key} {
      @include notification;
      background: $value;
      color: set-color-contrast($value);

      a,
      a:hover,
      a:focus {
        color: set-color-contrast($value);
      }
    }
  }

  &-toast,
  &-advise {
    position: relative;
    z-index: $zindex-notification;
    margin-top: -$gap;

    @include mediaquery ($bp-tablet) {
      margin-top: $gap;
    }
  }

  @at-root .notification-toast > [class*="notification-"] {
    @include close-animate;
    position: absolute;
    transition: height .5s;

    &.is-fixed {
      @include notification-fixed;
      top: 0;
    }
  }

  @at-root .notification-advice {
    max-width: $container-extended-width;
    margin: 0 auto;

    @media only screen and (max-width: $theme-container-width) {
      max-width: $container-width;
    }

    & > [class*="notification-"] {
      border-top: 1px solid rgba(0, 0, 0, 0.4);

      &.is-fixed {
        @include notification-fixed;
        bottom: 0;
        transition: bottom .5s;
      }
      &.is-closed {
          @include close-fixed-bottom;
        }
      }
    }

    @media print {
      display: none;
    }
  }
