/*------------------------------------*\
	$GRIDS
\*------------------------------------*/

/*
Boilerplate HTML

Styleguide #{$sgi-boilerplate}
*/

/*
Basic page

Markup:
<!doctype html>
<html class="casper" lang="">
	<head>
		<meta charset="utf-8">
		<meta http-equiv="x-ua-compatible" content="ie=edge">
		<title>Page title</title>
		<meta name="description" content="">
		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
		<!-- Place favicon.ico in the root directory -->
		<link rel="stylesheet" type="text/css" href="../styles/rubik.css" />
		<link rel="stylesheet" type="text/css" href="../styles/generics/tools.css">
	</head>
	<body>
		<!-- content -->
		<script src="js/polyfills.js"></script>
		<script src="js/jquery-2.1.0.min.js"></script>
		<script src="js/plugins.js"></script
		<script src="js/main.js"></script>
		<script src="js/helper.js"></script>
	</body>
</html>

Styleguide #{$sgi-basic-page}
*/


/*
Grid System

**We are using a mobile first 12 column fluid responsive grid system that helps you to build solid multi-device layouts.**

Grid system is used for creating page layout through a series of rows and columns that house
your content.

<br>
@@include('../templates/partials/grid.html')
<br>
- Use class <span class="featured">.row</span> to create a horizontal group of columns.
- Then nest as many containers <span class="featured">`<div class="col-[number]">`</span> as columns are necessary to build the layout
- Include the container <span class="featured">`<div class="col-child">`</span> as immediate children of <span class="featured">.col-[number]</span>.
<br>
@@include('../templates/partials/grid-layouts.html')

Markup:
<div class="row casper">
	<div class="col-4"><div class="col-child">...</div></div>
	<div class="col-8"><div class="col-child">...</div></div>
</div>
<div class="row">
	<div class="col-8"><div class="col-child">...</div></div>
	<div class="col-4"><div class="col-child">...</div></div>
</div>
<div class="row">
	<div class="col-4"><div class="col-child">...</div></div>
	<div class="col-4"><div class="col-child">...</div></div>
	<div class="col-4"><div class="col-child">...</div></div>
</div>
<div class="row">
	<div class="col-3"><div class="col-child">...</div></div>
	<div class="col-3"><div class="col-child">...</div></div>
	<div class="col-3"><div class="col-child">...</div></div>
	<div class="col-3"><div class="col-child">...</div></div>
</div>

Styleguide #{$sgi-gridSystem}
*/

@mixin row {
	margin: 0 0 0 -10px;
	clear: both;
	position: relative;

	&:after {
		content: " ";
		display: table;
		clear: both;
	}

	@media print {
		margin: 0;
	}
}

.row {
	@include row;

	@include mediaquery ($bp-tablet) {
		> [class^="col-"]:last-of-type .col-child,
		> [class*="col-"]:last-of-type .col-child {
				margin-bottom: 0;
		}
	}
	.aside-wrapper & {
		display: table;
		width: 100%;
		margin-left: 0;
	}

	+ .row {
		margin-top: 10px;

		@media print {
			margin: 0;
		}
	}

	//row-matrioska
	.row-matrioska {
		.col-child.inner {
			margin-top: 20px;
			margin-right: 0;
			padding: 0;

			@include mediaquery ($bp-tablet) {
				margin-top: 0;
			}
		}

		.col-12-medium .col-child.inner {
			@include mediaquery ($bp-tablet) {
				margin-top: 20px;
			}

			@include mediaquery ($bp-desktop) {
				margin-top: 0;
			}
		}

		> [class^="col-"]:first-of-type .col-child.inner,
		> [class*="col-"]:first-of-type .col-child.inner {
			margin-top: 0;
		}
	}
}

/*
Medium devices

Therefore, applying at any column the class <span class="featured">.col-6-medium</span> content will adjust to 50% width or <span class="featured">.col-12-medium</span> 100% width defined for medium devices.

@@include('../templates/partials/grid-devices.html')

Markup:
<div class="row casper">
	<div class="col-8 col-6-medium"><div class="col-child">...</div></div>
	<div class="col-4 col-6-medium"><div class="col-child">...</div></div>
</div>
<div class="row casper">
	<div class="col-8 col-12-medium"><div class="col-child">...</div></div>
	<div class="col-4 col-12-medium"><div class="col-child">...</div></div>
</div>

Styleguide #{$sgi-mediumDevices}
*/

@for $i from 1 through $gridColumns {
	.col-#{$i} {
		@include mediaquery ($bp-tablet) {
			width: ((100 / $gridColumns) * $i) * 1%;
			float: left;
		}

    @media print {
      &.print-col:not(:last-child) {
        float: left;
      }
    }
	}

	.col-#{$i}.col-6-small,
	.col-#{$i}.col-6-medium,
	.col-#{$i}.col-12-medium {
		@include mediaquery ($bp-desktop) {
			width: ((100 / $gridColumns) * $i) * 1%;
		}
	}
}

[class^="col-"],
[class*="col-"] {

  &:not(.print-col) {
  	@media print {
  		width: 100%;
  		float: none;
  	}
  }

	.aside-wrapper & {
		float: none;
		display: table-cell;
	}

	+ [class*="col-"] {
		margin-top: 10px;

		@include mediaquery ($bp-tablet) {
			margin-top: 0;
		}
	}
}

.col-4:nth-child(1n+4) {
	margin-top: 10px;

	@include mediaquery ($bp-tablet) {
		margin-top: 20px;
	}
}

.col-6-small {
	width: 50%;
	float: left;

	@include mediaquery ($bp-tablet) {
		width: 33.33%;
	}

	& + .col-6-small {
		margin-top: 0;
	}
}

.col-6-medium {
	@include mediaquery ($bp-tablet) {
		width: 50%;
	}
}

.col-12-medium {
	@include mediaquery ($bp-tablet) {
		width: 100%;

		+ .col-12-medium {
			margin-top: 20px;
		}
	}

	@include mediaquery ($bp-tablet) {
		+ .col-12-medium {
			margin-top: 0;
		}
	}
}

.col-child {
    max-width: calc(100% - 10px);
	margin: 0 0 0 10px;

	&.inner {
		max-width: 100%;
	}

	.col-12-medium:last-of-type > & {

		@include mediaquery ($bp-tablet) {
			margin-left: 10px;
		}

		// @include mediaquery ($bp-desktop) {
		// 	margin-left: 0;
		// }
	}

	[class*="panel-"] > & { //aplica al padre del col-child: col-x
		margin-left: 0;
		margin-bottom: 0;
	}

	.aside-wrapper & {
		margin-left: 0;
	}

	&-bottom {
		margin-top: 30px; //because align-self is not supported by ie and safari
		align-self: flex-end;
	}

	@media print {
		margin: 0;
	}
}

.col-child-content {
	padding: 10px 10px 10px 0;

	@include mediaquery ($bp-tablet) {

		@at-root .col-child#{&},
		.col-child & {
			padding-left: 10px;
		}
	}

	@media print {
		padding: 0;
	}
}

.row-bleed { //DEPRECATED: only used in 'view-offer'
	@include row;
	margin: 0;
	padding-top: 10px;

	.col-child {
		@include mediaquery ($bp-tablet) {
			margin-right: 10px;
		}
		@include mediaquery ($bp-desktop) {
			margin-right: 0;
		}
	}

	&:last-of-type .col-child {
		@include mediaquery ($bp-desktop) {
			margin-right: 10px;
		}
	}
}

/*------------------------------------*\
	$ROW FAUX CARD
\*------------------------------------*/

/*
Expand gutter columns

Add class <span class="featured">.row</span>,<span class="featured">.row-faux</span> and <span class="featured">.row-faux-card</span> to expand the gutter between the columns.

@@include('../templates/partials/grid-card.html')

Markup:
<div class="row row-faux row-faux-card casper">
      <div class="col-8">
          <div class="col-child">.col-8</div>
      </div>
      <div class="col-4">
          <div class="col-child">.col-4</div>
      </div>
</div>

Styleguide #{$sgi-expandGutterColumns}
*/

.row-faux-card { //expand default margin columns to 20

	@include mediaquery ($bp-tablet) {
		margin-left: -20px;
	}

	.col-child {
		margin-left: 10px;

		@include mediaquery ($bp-tablet) {
      @include display-flex;

			margin-left: 20px;
			max-width: calc(100% - 20px);
		}
	}

	> .col-2.col-6-small {
		&:nth-child(1n+3) {
			margin-top: 10px;
		}

		@include mediaquery ($bp-tablet) {
			&:nth-child(1n+3) {
				margin-top: 0;
			}

			&:nth-child(1n+4) {
				margin-top: 20px;
			}
		}

		@include mediaquery ($bp-desktop) {
			& + .col-2.col-6-small {
				margin-top: 0;
			}
		}
	}

	> .col-4.col-6-medium {
		@include mediaquery ($bp-tablet) {
			&:nth-child(1n+3) {
				margin-top: 20px;
			}
		}

		@include mediaquery ($bp-desktop) {
			&:nth-child(3) {
				margin-top: 0;
			}
		}

		&:last-child .col-child {
			margin-bottom: 10px;

			@include mediaquery ($bp-desktop) {
				margin-bottom: 0;
			}
		}
	}

	> .col-4.col-12-medium {
		@include mediaquery ($bp-tablet) {
			&:nth-child(1n+3) {
				margin-top: 20px;
				margin-bottom: 0;
			}
		}

		@include mediaquery ($bp-desktop) {
			&:nth-child(3) {
				margin-top: 0;
			}
		}

		.col-child {
			@include mediaquery ($bp-tablet) {
				margin-left: 20px;
				margin-bottom: 0;
			}
		}

		+ .col-4.col-12-medium {
			@include mediaquery ($bp-tablet) {
				margin-top: 20px;
			}

			@include mediaquery ($bp-desktop) {
				margin-top: 0;

				&:nth-child(1n+4) {
					margin-top: 20px;
				}
			}
		}
	}
}


/*------------------------------------*\
	$ROW FAUX
\*------------------------------------*/

/*
Equal height columns

Add class <span class="featured">.row</span> and <span class="featured">.row-faux</span> to build an equal height columns structure.

@@include('../templates/partials/grid-equal.html')

Markup:
<div class="row row-faux casper">
	<div class="col-4"><div class="col-child">...</div></div>
	<div class="col-4"><div class="col-child">...</div></div>
	<div class="col-4"><div class="col-child">...</div></div>
</div>

Styleguide #{$sgi-equalHeightColumns}
*/

.row-faux {

	> [class*="col-"]:last-child .col-child {
			margin-bottom: 0;
	}

	@include mediaquery ($bp-tablet) {

		@include display-flex;
		@include vendor-prefix('flex-flow', 'row wrap');

		> [class^="col-"],
		> [class*="col-"] {
			@include display-flex;
			float: none;
			//overflow: hidden; Si hay tooltip se corta por el overflow
		}

		.col-12-medium,
		.col-6-medium,
		.col-12-medium [class*="col-"]:last-child {
			display: block;

			.col-child {
				margin-bottom: 10px;

				@include mediaquery ($bp-desktop) {
					margin-bottom: 0;
				}
			}
		}

		.col-child {
			display: block;
			@include flex;

      @at-root .row-faux-card .col-child {
        @include display-flex;
      }
		}
	}

	@include mediaquery ($bp-tablet) {

		.col-6-medium,
		.col-12-medium  {
			@include display-flex;
		}

	}

}

/*------------------------------------*\
	$ROW PANEL
\*------------------------------------*/

/*
Remove gutter columns

Add class <span class="featured">.row</span>,<span class="featured">.row-faux</span> to build an equal height columns structure and <span class="featured">.row-panel</span> to remove the gutter between the columns.

@@include('../templates/partials/grid-panel.html')

Markup:
<div class="row row-faux row-panel casper">
      <div class="col-8">
          <div class="col-child">.col-8</div>
      </div>
      <div class="col-4">
          <div class="col-child">.col-4</div>
      </div>
</div>

Styleguide #{$sgi-removeGutterColumns}
*/

.row-panel { //remove default margin columns
	> [class*="col-"]:not(.col-12-medium):last-of-type {
  		.col-child {
	      @include mediaquery ($bp-tablet) {
	        margin-left: 0;
	      }

		  @include mediaquery ($bp-desktop) {
	        margin-left: 0;
	      }
	    }
  	}

	> [class*="col-"]:last-of-type {
  		.col-child {
	      @include mediaquery ($bp-desktop) {
	        margin-left: 0;
	      }
	    }
  	}
}

/*------------------------------------*\
	$ROW NESTED
\*------------------------------------*/

/*
Nested row

@@include('../templates/partials/grid-nested.html')

Markup:
<div class="row casper">
	<div class="col-6">
		<div class="col-child">
			<div class="row">
				<div class="col-6"><div class="col-child">...</div></div>
				<div class="col-6"><div class="col-child">...</div></div>
			</div>
		</div>
	</div>
	<div class="col-6"><div class="col-child">...</div></div>
</div>

Styleguide #{$sgi-gridNested}
*/

/*
Examples Layouts

<a href="#{$sgp-layouts}" target="blank">#{$sgp-openPage}</a>

Styleguide #{$sgi-examplesLayouts}

*/
