/*------------------------------------*\
    $MAIN
\*------------------------------------*/

@font-face {
  font-family: 'Proximanova';
  src: url('#{$path-font}proximanova-regular.eot?') format('eot'),
	  url('#{$path-font}proximanova-regular.woff') format('woff'),
	  url('#{$path-font}proximanova-regular.otf') format('opentype'),
	  url('#{$path-font}proximanova-regular.ttf') format('truetype');
}

@font-face {
  font-family: 'Proximanovalight';
  src: url('#{$path-font}proximanova-light.eot?') format('eot'),
	  url('#{$path-font}proximanova-light.woff') format('woff'),
	  url('#{$path-font}proximanova-light.otf') format('opentype'),
	  url('#{$path-font}proximanova-light.ttf') format('truetype');
}

@font-face {
  font-family: 'Proximanovabold';
  src: url('#{$path-font}proximanova-bold.eot?') format('eot'),
	  url('#{$path-font}proximanova-bold.woff') format('woff'),
	  url('#{$path-font}proximanova-bold.otf') format('opentype'),
	  url('#{$path-font}proximanova-bold.ttf') format('truetype');
}

@font-face {
  font-family: 'Proximanovasemibold';
  src: url('#{$path-font}proximanova-semibold.eot?') format('eot'),
	  url('#{$path-font}proximanova-semibold.woff') format('woff'),
	  url('#{$path-font}proximanova-semibold.otf') format('opentype'),
	  url('#{$path-font}proximanova-semibold.ttf') format('truetype');
}

@font-face {
  font-family: 'Slabo-regular';
  src: url('#{$path-font}slabo-regular.eot?') format('eot'),
	  url('#{$path-font}slabo-regular.woff') format('woff'),
	  url('#{$path-font}slabo-regular.otf') format('opentype'),
	  url('#{$path-font}slabo-regular.ttf') format('truetype');
}

@font-face {
	font-family: 'Icons';
	src:url('#{$path-font}infojobs.eot?') format('eot'),
		url('#{$path-font}infojobs.woff') format('woff'),
		url('#{$path-font}infojobs.ttf') format('truetype');
	font-weight: normal;
	font-style: normal;
}

*,
*::before,
*::after {
  @include box-sizing($box-model);
}

body {
	height: 100%;
	font-family: $base-font-family;
	font-size: $base-font-size;
	line-height: $base-line-height;
	color: $dark-silk;
    background: $outer-fields;
}

input,
select,
textarea,
button {
	font-family: inherit;
}

a {
	@include transition;
 	text-decoration: none;
 	color: $day-blue;
}

a:hover {
	 text-decoration: none;
	 color: $day-blue;
}

a:focus {
	outline:none;
}

.link-underline,
.link-underline:hover,
.link:hover {
 	text-decoration: underline;
}

strong {
	font-family: $base-font-family-bold;
}

/*
Layouts

Styleguide #{$sgi-layouts}
*/

/*
Containers

To wrap all page content in a responsive container use class `.wrapper`. Use class `.container` to create blocks of content and add class `.container-expanded` to create a top gap between blocks of content.
<br>
<br>

Markup:
<div class="wrapper casper">
    <div class="container container-expanded">
        <!-- Container is centered on page. The inner is
         fluid between small and middle viewports,
         and fixed width for larger dimensions:
            * 970px < 769px
            * 768px < 481px
            * > 480px -->
    </div>
</div>

Styleguide  #{$sgi-containers}
*/

.wrapper {
	//overflow: hidden; it's removed because it creates a bug with anchors and footer structure
	min-height: 100%;
    position: relative;
}

.container {
	max-width: $container-width;
	margin: 0 auto;
}

.container-expanded {
    margin-top: 10px;

	@media print {
		margin: 0;
	}
}

.row-centered {
	width: 100%;

	@include mediaquery ($bp-desktop) {
		width: $row-centered-width;
		margin: 0 auto 10px auto;
	}

	form {
		@include mediaquery ($bp-desktop) {
			width: $row-centered-width-form;
			margin: 0 auto 10px auto;
		}
	}


	input,
	textarea {
		width: 100%;
	}
}

.modal-content .row-centered {
	@include mediaquery ($bp-desktop) {
		width: 450px;
		margin-bottom: 0;
	}
}

.row-flex {
	@include display-flex;
	@include align-items(center);

	.col-flex-1 {
		@include flex(1);

		&:not(:only-child) {
			margin-right: 20px;
		}
	}

	.col-flex-min {
		min-width: 75px;
		text-align: right;
	}
}

/*
Inner containers

- Use class `.inner` to create 20px's inner space.
- Add class `.inner-expanded` to create 40px's inner on the top and bottom.

<br>
<br>

Markup:
<div class="inner casper">
    ...
    <div class="inner">
        ...
    </div>
</div>
<div class="inner inner-expanded casper">
    ...
</div>

Styleguide #{$sgi-innerContainers}
*/

.content-wrapper,
.inner {
    @include inner;
}

.inner-expanded {
	@include inner-expanded;

    & > .inner:first-child,
    & > .inner:only-child {
		padding-top: 0;
	}

    & > .inner:last-child,
    & > .inner:only-child {
		padding-bottom: 0;
	}

    & + .inner-expanded {
        padding-top: 0;

        @include mediaquery ($bp-desktop) {
            padding-top: 40px;
        }
    }

}

.img-responsive {
	max-width: 100%;
	height: auto;
}

img[alt] {
    background: none;
    border: 0;
    word-wrap: break-word;
}

.section { //TODO: only used at home and red_de_contactos.html
    background-color: $shiro;
	padding: 10px;

    @include mediaquery ($bp-desktop) {

        padding: 20px;

    }
}

.container-editable {
    .content-middle {
        min-height: 30px;
    }

    @include mediaquery ($bp-desktop) {
        &:hover {
            background: #f5fcff;
            border-top: 1px solid #dae8ee;
            border-bottom: 1px solid #dae8ee;
            margin-top: -1px;
            margin-bottom: -1px;
            cursor: pointer;

            .action {
                display: block;
            }

        }

        &.border-all:hover {
            border: 1px solid #dae8ee;
            margin-top: 0;
            margin-bottom: 0;
        }

    }

    .action {
        display: none;
    }

    &.opacity {
        opacity: 1;

        .content-type-text,
        .panel-default {
            opacity: .5;
        }
    }

    p {
    	color: $dark-silk;
    }
}

.opacity {
    opacity: .5;
}

.list-default > li.container-editable {
	margin-bottom: 0;

	@include mediaquery ($bp-desktop) {
		&:hover {
			margin-bottom: -1px;
		}
	}
}

.inner-expanded > a:first-child > .inner.container-editable {
    margin-top: -20px;

    &:hover {
        margin-top: -21px;
    }
}

.section-centered {
	text-align: center;
}

hr {
	margin: 0;
	border: none;
	border-top: 1px solid $outer-wall;
}

.aside-wrapper {//TODO: only used in 'search-results-list' replace for grid system
    background-color: $dark-shiro;

    @include mediaquery ($bp-desktop) {

      .aside-content {
        width: 240px;
      }

    }

    .main-content {
		background-color: $shiro;

        @include mediaquery ($bp-desktop) {

          position: relative;
          margin-left: 240px;
          padding: 0 0 70px 0;

        }
    }
}

@mixin truncate {
	display: block;
 	max-width: 99%;
  	white-space: nowrap;
  	overflow: hidden;
  	text-overflow: ellipsis;
    padding-left: 1px;
}

.truncate {
	@include truncate;
}

.truncate-small-device {
	@include truncate;

	@include mediaquery ($bp-desktop) {
		display: inline;
	 	max-width: auto;
	  	white-space: unset;
	  	overflow: hidden;
	  	text-overflow: unset;
	    padding-left: 0;
	}

}

//.truncate-comma:after {
//	content: (" ,");
//	position: absolute;
//    right: 0;
//}


// to apply on container needs min-height
.inner-freak {
	min-height: 250px;

	&:only-of-type {
		min-height: 400px;
	}
}

.divider:after {
	content: "|";
	padding-left: 5px;
	color: $darkest-shiro;
}

abbr {
    text-decoration: none;
    cursor: help;
}
