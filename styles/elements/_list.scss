@import "list-item-checked";
@import "list-columns";
@import "list-dl-inline";

// Text elements

/*------------------------------------*\
    $LIST
\*------------------------------------*/
/*
Lists

Use the following tags to create semantic lists:

* `<ul>` for unordered lists
* `<ol>` for ordered lists
* `<dl>` for definition lists

Styleguide #{$sgi-lists}
*/

/*
List default

Use class `.list-default` for a basic list without decoration.

Markup:
<!-- Example for unordered and ordered list. -->
<ul class="list-default">
    <li>Salario no disponible</li>
    <li>Experiencia minima: no requerida</li>
    <li>Tipo de oferta: de duracion determinada, jornada completa</li>
</ul>
<!-- Example for definition list. -->
<dl class="list-default">
    <dt>Salario:</dt>
    <dd>No disponible</dd>
    <dt>Tipo de oferta:</dt>
    <dd>De duracion determinada, jornada completa</dd>
</dl>
<!-- List expanded -->
<ul class="list-expanded">
    <li>Salario no disponible</li>
    <li>Experiencia minima: no requerida</li>
    <li>Tipo de oferta: de duracion determinada, jornada completa</li>
</ul>

Styleguide #{$sgi-listsDefault}
*/

.list-default {

    > li,
    > dt {
        display: block;
        position: relative;
        margin-bottom: 10px;
        word-break: break-word;

        @at-root .small#{&} {
            margin-bottom: 5px;

            @media print {
        		font-size: ($small-font-size/$point-to-px);
        		line-height: ($small-line-height/$point-to-px);
        	}
        }

        &:last-child {
	    	margin-bottom: 0;

	    }

        @media print {
    		font-size: ($base-font-size/$point-to-px);
    		line-height: ($base-line-height/$point-to-px);
    	}
    }

    > .hide {
      display: none;
    }

    > dt {
      @include bold;
      margin-bottom: 0;color: $dark-silk;

        &.hide {
            display: none;
        }
    }

    > dd {
        //margin-bottom: 20px;

        @media print {
    		font-size: ($base-font-size/$point-to-px);
    		line-height: ($base-line-height/$point-to-px);
    	}
    }

    & dd + dt {
        margin-top: $padding;
    }

    @at-root .list-inline-description#{&} {

        > dd {
            display: inline-block;
        }

        > dd + dd {
            margin: 1px 0 0 10px;
        }
    }

    &[class^="list-grid-columns-"],
    &[class*="list-grid-columns-"] {
      dt {
        margin: 0;

        &::after {
          padding-bottom: 20px;
        }
      }
    }

    &.list-expanded {

      > li {
        margin-bottom: $padding;

        &:last-of-type {
          margin-bottom: 0;
        }
      }
    }

}


/*
List inline

Use class `.list-inline` to generate a list inline without gutter between list items.

Markup:
<ul class="list-inline">
    <li>Lorem ipsum 1/</li>
    <li>Lorem ipsum 2/</li>
    <li>Lorem ipsum 3</li>
</ul>

Styleguide #{$sgi-listsInline}
*/
.list-inline {
  overflow: hidden;
  font-size: 0;

  li:not(:last-of-type) {
    margin-right: 10px;
  }

  li {
    display: inline-block;
  }

  &:not(.base) {
    li {
      font-size: $small-font-size;
      font-family: $base-font-family;
    }
  }

  .dt {
    margin-right: 5px;
  }

  &-center {
    @extend .list-inline;
    display: inline-block;
    width: auto;
    margin: 0 auto;
    text-align: center;
  }

  &-center-small-device {
    @extend .list-inline;
    display: inline-block;
    width: auto;
    margin: 0 auto;
    text-align: center;

    @include mediaquery($bp-desktop) {
      display: block;
      text-align: left;
      margin: 0;
    }
  }


}

/*
Numbered list

Use class `.list-ordered` to generate a numbered list.

Markup:
<ul class="list-ordered">
    <li>Lorem ipsum</li>
    <li>Lorem ipsum</li>
    <li>Lorem ipsum</li>
</ul>

Styleguide #{$sgi-listsOrdered}
*/
.list-ordered {

	> li {
		counter-increment: step-counter;
		overflow: hidden;

    &::before {
      @include bold;
      content: counter(step-counter, decimal-leading-zero) ".";
      float: left;
      min-width: 35px;
      padding-top: 2px;
		}

		div {
			overflow: hidden;
		}
	}
}

/*
Lists with bullets

Use class `.list-default` and `.list-bullet-default` to add default bullets to the list.

Markup:
<ul class="list-default list-bullet-default">
    <li>Lorem ipsum</li>
    <li>Lorem ipsum</li>
    <li>Lorem ipsum</li>
</ul>

Styleguide #{$sgi-listsWithBullets}
*/

.list-bullet-default {
    > li,
    > dt,
    > dd {
        padding-left: 15px;
    }

    > li::before,
    > dt::before {
        content: "";
        position: absolute;
        top: 6px;
        left: 0;
        display: block;
        width: 5px;
        height: 5px;
        list-style-position: inside;
        border-radius: 50%;
        background-color: $soft-script;
    }

    @media print {
        margin: 0;
    }

}


/*
Lists with icons

Use class `.list-default` and `.list-bullet-icon` to show icons outside the content flow.<br>
Use class `.iconfont-[name]` for icon type.<br>
Visit the [icons list](#rubik-#{$sgi-iconsList}).

Markup:
<ul class="list-default list-bullet-icon">
    <li class="iconfont-CV">Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.</li>
    <li class="iconfont-Check">Lorem ipsum dolor</li>
</ul>

Styleguide #{$sgi-listsWithIcons}
*/

.list-bullet-icon {

    > [class^="iconfont-"],
    > [class*="iconfont-"] {
        position: relative;
        padding-left: 20px;

        &::before {
            position: absolute;
            top: 10px;
        }
    }

    @each $val in $iconfont-size {
      .iconfont-#{$val}px,
      .iconfont-#{$val}px + dd {
        padding-left: #{$val + 10}px;
      }
    }
}

//@each $val in $iconfont-size {
//	.iconfont-#{$val}px {
//    @if ($val < 50) {
//		padding-left: #{$val + 10}px;
//	}
//	@else {
//		padding-left: #{$val + 20}px;
//		}
//	}
//}


/*
Lists with nested structure
*/

.list-default-title { //TODO: check usability; replace structure for <dl><dt><dd> element
    display: inline-block;
    margin: 0;
    font-size: 16px;
}

.list-default-text { //TODO: check usability; replace structure for <p> element
    display: block;
    margin: 0;
}


.list-divider > li {//DEPRECATED: mirar donde se usa.
    padding-top: 15px;
    padding-bottom: 15px;
    border-bottom: 1px solid $darkest-shiro;

    &:first-child {
        padding-top: 0;
    }

    &:last-child {
        border: none;
    }

    @at-root .small#{&} {
        margin-bottom: 5px;
        padding: 0 0 5px 0;
    }

    @at-root .list-divider-bleed#{&} { // fix .inner default padding
        margin: 0 -10px;
        padding-right: 10px;
        padding-left: 10px;

        @include mediaquery ($bp-tablet) {
            margin: 0 -20px;
            padding-right: 20px;
            padding-left: 20px;
        }

        &:last-child {
            padding-bottom: 0;
        }
    }

    h2,
    p {
    	margin-bottom: 0;
	}

	.btn {
		margin-top: 20px;
	}
}

/*
list-item-divider

Use class `.list-item-divider` to apply a border-top to each list items.

Markup:
<ul>
    <li class="list-item-divider">Lorem ipsum dolor sit amet</li>
    <li class="list-item-divider">Lorem ipsum</li>
    <li class="list-item-divider">Lorem ipsum dolor</li>
</ul>

*/

%list-item-divider {
	li {
		border-bottom: 1px solid $darkest-shiro;
		margin-bottom: 10px;
		padding-bottom: 10px;

		@include mediaquery ($bp-tablet) {
			margin-bottom: 20px;
			padding-bottom: 20px;
		}

		&:last-child {
			border-bottom: 0 none;
			margin-bottom: 0;
			padding-bottom: 0;
		}
	}
}

.list-item-divider {
	@extend %list-item-divider;

	&--small {
		@extend %list-item-divider;
		margin-bottom: 5px;
		padding-bottom: 5px;
	}
}

/*
Tag group

Use class `.tag-group` to display list items in the same line with gutter between this items.

Markup:
<ul class="tag-group">
    <li>Lorem ipsum dolor sit amet</li>
    <li>Lorem ipsum</li>
    <li>Lorem ipsum dolor</li>
</ul>

Styleguide #{$sgi-tagGroup}
*/

.tag-group {
    @include font(small);
    overflow: hidden;

    &:last-child {
        margin-top: 10px;
    }

    li {
        float: left;
        margin-bottom: 5px;
        padding-right: 20px;

        @media print {
            margin: 0;
        }
    }
}

/*
Tag divider

Use class `.tag-divider` to divide tag group items, showing them in the same line with a divider in between.

Markup:
<ul class="tag-group">
    <li class="tag-divider">Lorem ipsum dolor</li>
    <li class>Lorem ipsum</li>
</ul>

Styleguide #{$sgi-tagDivider}
*/

.tag-group li.tag-divider:not(:only-child) {
    @extend %divider;
    margin-right: 10px;
    padding-right: 10px;
}

.tag-group li.tag-sticker {
    float: none;

    @media print {
        float: left;
    }
}


/*
Tag group top

Use class `.tag-group-top` to add a gap between this tag and the following.

Markup:
<ul class="tag-group tag-group-top">
    <li>Lorem ipsum</li>
    <li>Lorem ipsum</li>
    <li>Lorem ipsum</li>
</ul>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>

Styleguide #{$sgi-tagGroupTop}
*/

.tag-group-top {
    margin-bottom: 10px;

    @media print {
        margin: 0;
    }
}

.tag-group .alternative { //TODO: nest with '& .tag-group'
    margin-right: 0;
}

/*
Tag group with ellipsis

Use class `.ellipsis` in `<span>` to generate ellipsis in the text of an item of the tag group.
Add also the `.tag-ellipsis-col2` or `.tag-ellipsis-col3` in `<li>` when the tag group contains two or three items.

Markup:
<ul class="tag-group">
    <li class="tag-divider tag-ellipsis-cols2">
        <span class="ellipsis">Consectetur Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.</span>
    </li>
    <li>Lorem ipsum</li>
</ul>
<ul class="tag-group">
    <li class="tag-divider tag-ellipsis-cols3">
        <span class="ellipsis">Consectetur Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.</span>
    </li>
    <li class="tag-divider">Lorem ipsum</li>
    <li>Lorem ipsum</li>
</ul>

Styleguide #{$sgi-tagGroupWithEllipsis}
*/
.tag-group .ellipsis { //TODO: nest with '& tag-group'. Use truncate class?
    display: block;
    max-width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.tag-group  .tag-ellipsis-cols2 { //TODO: nest with '& tag-group'
    max-width: 50%;
}

.tag-group  .tag-ellipsis-cols3 { //TODO: nest with '& tag-group'
    max-width: 33%;
}

// Es redefineix el color a gris perque, tot i tenir default, els anchors
// es continuen pintant en blau i el tag-primary en verd

.tag-disabled {  //TODO: ?? se usa? Usar class alternative?
    color: $soft-script;
}
